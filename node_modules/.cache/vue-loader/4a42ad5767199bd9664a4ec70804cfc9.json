{"remainingRequest":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\aidan\\Dev\\next\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\aidan\\Dev\\next\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aidan\\Dev\\next\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"C:\\Users\\aidan\\Dev\\next\\src\\App.vue","mtime":1553125266966},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551299953776},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1551299984319},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1551299984800},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551299953776},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\index.js","mtime":1551299984314}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-app\",\n    { attrs: { dark: \"\" } },\n    [\n      _c(\"div\", { ref: \"approot\" }),\n      _c(\n        \"v-toolbar\",\n        {\n          staticStyle: {\n            background: \"linear-gradient(to right, #542478 0%, #011949 100%)\"\n          },\n          attrs: { app: \"\" }\n        },\n        [\n          _vm.userPresent\n            ? _c(\"v-toolbar-side-icon\", {\n                on: {\n                  click: function($event) {\n                    _vm.drawer = !_vm.drawer\n                  }\n                }\n              })\n            : _vm._e(),\n          _c(\"v-toolbar-title\", [\n            _c(\"img\", {\n              staticClass: \"hidden-xs-only\",\n              staticStyle: { height: \"45px\", top: \"5px\", position: \"relative\" },\n              attrs: { src: require(\"./assets/paradigmlogo.png\") }\n            })\n          ]),\n          _c(\"v-spacer\"),\n          _vm.userPresent\n            ? _c(\n                \"v-toolbar-items\",\n                [\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { icon: \"\" },\n                      on: {\n                        click: function($event) {\n                          _vm.dialog = true\n                        }\n                      }\n                    },\n                    [_c(\"v-icon\", [_vm._v(\"person\")])],\n                    1\n                  ),\n                  _c(\n                    \"v-btn\",\n                    { attrs: { icon: \"\" }, on: { click: _vm.refresh } },\n                    [_c(\"v-icon\", [_vm._v(\"refresh\")])],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"v-navigation-drawer\",\n        {\n          attrs: { app: \"\", temporary: \"\", floating: \"\" },\n          model: {\n            value: _vm.drawer,\n            callback: function($$v) {\n              _vm.drawer = $$v\n            },\n            expression: \"drawer\"\n          }\n        },\n        [\n          _c(\n            \"v-toolbar\",\n            [\n              _c(\n                \"v-toolbar-side-icon\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.drawer = !_vm.drawer\n                    }\n                  }\n                },\n                [_c(\"v-icon\", [_vm._v(\"close\")])],\n                1\n              ),\n              _c(\"v-toolbar-title\", [_vm._v(\"Menu\")])\n            ],\n            1\n          ),\n          _c(\n            \"v-list\",\n            [\n              _vm._l(_vm.apps, function(link) {\n                return _c(\n                  \"v-list-tile\",\n                  {\n                    key: link.route,\n                    attrs: {\n                      router: \"\",\n                      to: link.route,\n                      ripple: { class: \"grey--text\" }\n                    }\n                  },\n                  [\n                    _c(\n                      \"v-list-tile-title\",\n                      { staticClass: \"white--text font-weight-light\" },\n                      [_vm._v(_vm._s(link.text))]\n                    )\n                  ],\n                  1\n                )\n              }),\n              _c(\n                \"v-list-group\",\n                [\n                  _c(\n                    \"v-list-tile\",\n                    { attrs: { slot: \"activator\" }, slot: \"activator\" },\n                    [\n                      _c(\n                        \"v-list-tile-title\",\n                        { staticClass: \"font-weight-black\" },\n                        [_vm._v(\"Company\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._l(_vm.company, function(link) {\n                    return _c(\n                      \"v-list-tile\",\n                      {\n                        key: link.route,\n                        attrs: {\n                          router: \"\",\n                          to: link.route,\n                          ripple: { class: \"grey--text\" }\n                        }\n                      },\n                      [\n                        _c(\n                          \"v-list-tile-title\",\n                          { staticClass: \"white--text font-weight-light\" },\n                          [_vm._v(_vm._s(link.text))]\n                        )\n                      ],\n                      1\n                    )\n                  })\n                ],\n                2\n              ),\n              _c(\n                \"v-list-group\",\n                [\n                  _c(\n                    \"v-list-tile\",\n                    { attrs: { slot: \"activator\" }, slot: \"activator\" },\n                    [\n                      _c(\n                        \"v-list-tile-title\",\n                        { staticClass: \"font-weight-black\" },\n                        [_vm._v(\"Latest\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._l(_vm.latest, function(link) {\n                    return _c(\n                      \"v-list-tile\",\n                      {\n                        key: link.route,\n                        attrs: {\n                          router: \"\",\n                          to: link.route,\n                          ripple: { class: \"grey--text\" }\n                        }\n                      },\n                      [\n                        _c(\n                          \"v-list-tile-title\",\n                          { staticClass: \"white--text font-weight-light\" },\n                          [_vm._v(_vm._s(link.text))]\n                        )\n                      ],\n                      1\n                    )\n                  })\n                ],\n                2\n              )\n            ],\n            2\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-dialog\",\n        {\n          attrs: { \"max-width\": \"500\" },\n          model: {\n            value: _vm.dialog,\n            callback: function($$v) {\n              _vm.dialog = $$v\n            },\n            expression: \"dialog\"\n          }\n        },\n        [\n          _c(\n            \"v-card\",\n            [\n              _c(\n                \"v-card-title\",\n                { attrs: { \"primary-title\": \"\" } },\n                [\n                  _c(\"h3\", { staticClass: \"headline mb-0\" }, [\n                    _vm._v(\"Account\")\n                  ]),\n                  _c(\"v-spacer\"),\n                  _c(\n                    \"v-btn\",\n                    {\n                      staticClass: \"dialog-close-btn\",\n                      attrs: { icon: \"\" },\n                      on: {\n                        click: function($event) {\n                          _vm.dialog = false\n                        }\n                      }\n                    },\n                    [_c(\"v-icon\", [_vm._v(\"close\")])],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-card-text\",\n                [\n                  !_vm.userPresent\n                    ? _c(\n                        \"v-form\",\n                        [\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              autocomplete: \"off\",\n                              type: \"text\",\n                              name: \"username\",\n                              label: \"Username\",\n                              rules: _vm.usernameRules\n                            },\n                            model: {\n                              value: _vm.username,\n                              callback: function($$v) {\n                                _vm.username = $$v\n                              },\n                              expression: \"username\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              autocomplete: \"off\",\n                              type: \"password\",\n                              name: \"password\",\n                              label: \"Password\",\n                              rules: _vm.passRules\n                            },\n                            model: {\n                              value: _vm.password,\n                              callback: function($$v) {\n                                _vm.password = $$v\n                              },\n                              expression: \"password\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm.userPresent\n                    ? _c(\n                        \"div\",\n                        [\n                          _c(\"p\", [\n                            _c(\"strong\", [_vm._v(\"Status:\")]),\n                            _vm._v(\" Signed in\")\n                          ]),\n                          _c(\"p\", [\n                            _c(\"strong\", [_vm._v(\"Username:\")]),\n                            _vm._v(\" \" + _vm._s(_vm.username))\n                          ]),\n                          _c(\"p\", [\n                            _c(\"strong\", [_vm._v(\"Last Sign In:\")]),\n                            _vm._v(\n                              \" \" + _vm._s(_vm.userInfo.metadata.lastSignInTime)\n                            )\n                          ]),\n                          _c(\"p\", [\n                            _c(\"strong\", [_vm._v(\"Account Creation:\")]),\n                            _vm._v(\n                              \" \" + _vm._s(_vm.userInfo.metadata.creationTime)\n                            )\n                          ]),\n                          _c(\"p\", [\n                            _c(\"strong\", [_vm._v(\"User ID:\")]),\n                            _vm._v(\" \" + _vm._s(_vm.userInfo.uid))\n                          ]),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              label: \"New password\",\n                              rules: _vm.passRules,\n                              autocomplete: \"off\",\n                              type: \"password\",\n                              name: \"newpass\"\n                            },\n                            model: {\n                              value: _vm.newPassword,\n                              callback: function($$v) {\n                                _vm.newPassword = $$v\n                              },\n                              expression: \"newPassword\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    : _vm._e()\n                ],\n                1\n              ),\n              _c(\n                \"v-card-actions\",\n                [\n                  !_vm.userPresent\n                    ? _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"primary\" },\n                          on: { click: _vm.signIn }\n                        },\n                        [_vm._v(\"Sign In\")]\n                      )\n                    : _vm._e(),\n                  _vm.userPresent\n                    ? _c(\"v-btn\", { on: { click: _vm.signOut } }, [\n                        _vm._v(\"Sign Out\")\n                      ])\n                    : _vm._e(),\n                  _vm.userPresent\n                    ? _c(\n                        \"v-btn\",\n                        {\n                          attrs: { flat: \"\", color: \"warning\" },\n                          on: { click: _vm.changePass }\n                        },\n                        [_vm._v(\"Change Password\")]\n                      )\n                    : _vm._e(),\n                  _vm.userPresent\n                    ? _c(\n                        \"v-btn\",\n                        {\n                          attrs: { flat: \"\", color: \"error\" },\n                          on: { click: _vm.deleteUser }\n                        },\n                        [_vm._v(\"Delete Account\")]\n                      )\n                    : _vm._e()\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-content\",\n        [\n          _c(\n            \"v-container\",\n            { staticStyle: { padding: \"0\" }, attrs: { fluid: \"\" } },\n            [\n              _vm.userPresent ? _c(\"router-view\") : _vm._e(),\n              !_vm.userPresent\n                ? _c(\n                    \"div\",\n                    {\n                      staticClass: \"noUser\",\n                      staticStyle: { \"text-align\": \"center\" }\n                    },\n                    [\n                      _c(\n                        \"h1\",\n                        {\n                          staticClass:\n                            \"display-3 red--text font-weight-thin text-uppercase\",\n                          staticStyle: { margin: \"100px 0px 25px 0px\" }\n                        },\n                        [_vm._v(\"No User is Logged In\")]\n                      ),\n                      _c(\n                        \"h3\",\n                        {\n                          staticClass: \"headline font-weight-light\",\n                          staticStyle: { margin: \"25px\" }\n                        },\n                        [_vm._v(\"Please login to continue.\")]\n                      ),\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"primary\" },\n                          on: {\n                            click: function($event) {\n                              _vm.dialog = true\n                            }\n                          }\n                        },\n                        [_vm._v(\"Login\")]\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm.feedback\n        ? _c(\n            \"v-snackbar\",\n            {\n              attrs: { bottom: \"\", left: \"\", timeout: _vm.snackTO },\n              model: {\n                value: _vm.snackbar,\n                callback: function($$v) {\n                  _vm.snackbar = $$v\n                },\n                expression: \"snackbar\"\n              }\n            },\n            [_vm._v(\"\\n      \" + _vm._s(_vm.feedback) + \"\\n    \")]\n          )\n        : _vm._e(),\n      _c(\"v-footer\", [\n        _c(\"div\", [\n          _c(\n            \"span\",\n            { staticClass: \"pl-2\", staticStyle: { \"text-align\": \"center\" } },\n            [\n              _vm._v(\n                \"© \" +\n                  _vm._s(new Date().getFullYear()) +\n                  \" Paradigm Development. All Rights Reserved.\"\n              )\n            ]\n          )\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}