{"remainingRequest":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\aidan\\Dev\\next\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\aidan\\Dev\\next\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\aidan\\Dev\\next\\src\\views\\Flamechat.vue?vue&type=template&id=53b20a7e&scoped=true&","dependencies":[{"path":"C:\\Users\\aidan\\Dev\\next\\src\\views\\Flamechat.vue","mtime":1553212126716},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551299953776},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1551299984319},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1551299984800},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1551299953776},{"path":"C:\\Users\\aidan\\Dev\\next\\node_modules\\vue-loader\\lib\\index.js","mtime":1551299984314}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"flamechat\" },\n    [\n      _c(\n        \"v-toolbar\",\n        { attrs: { dense: \"\", color: \"deep-orange darken-2\" } },\n        [\n          _c(\"v-toolbar-title\", [_vm._v(\"Flamechat\")]),\n          _c(\"v-spacer\"),\n          _vm.username == \"diddy12310\"\n            ? _c(\"v-switch\", {\n                staticStyle: { flex: \"none !important\" },\n                on: { click: _vm.toggleFc },\n                model: {\n                  value: _vm.flamechatEnable,\n                  callback: function($$v) {\n                    _vm.flamechatEnable = $$v\n                  },\n                  expression: \"flamechatEnable\"\n                }\n              })\n            : _vm._e(),\n          _vm.username == \"diddy12310\"\n            ? _c(\n                \"v-btn\",\n                {\n                  attrs: { flat: \"\" },\n                  on: {\n                    click: function($event) {\n                      _vm.clearAllMessages()\n                    }\n                  }\n                },\n                [_vm._v(\"Clear All\")]\n              )\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"v-container\",\n        [\n          !_vm.username || !_vm.color || !_vm.ready\n            ? _c(\n                \"v-card\",\n                { staticClass: \"welcome-card\" },\n                [\n                  _c(\"v-card-title\", [\n                    _c(\"h3\", { staticClass: \"headline mb-0 text-xs-center\" }, [\n                      _vm._v(\"Welcome to Flamechat!\")\n                    ])\n                  ]),\n                  _c(\n                    \"v-card-text\",\n                    [\n                      _c(\n                        \"v-radio-group\",\n                        {\n                          attrs: { column: \"\" },\n                          model: {\n                            value: _vm.color,\n                            callback: function($$v) {\n                              _vm.color = $$v\n                            },\n                            expression: \"color\"\n                          }\n                        },\n                        [\n                          _vm._l(_vm.colors, function(color) {\n                            return _c(\"v-radio\", {\n                              key: color.value,\n                              attrs: {\n                                label: color.label,\n                                color: color.value,\n                                value: color.value\n                              }\n                            })\n                          }),\n                          _vm.username == \"diddy12310\"\n                            ? _c(\"v-radio\", {\n                                attrs: {\n                                  label: \"Gold\",\n                                  color: \"#bf9b30\",\n                                  value: \"#bf9b30\"\n                                }\n                              })\n                            : _vm._e(),\n                          _vm.username == \"paradigm\"\n                            ? _c(\"v-radio\", {\n                                attrs: {\n                                  label: \"Bot\",\n                                  color: \"#00796B\",\n                                  value: \"#00796B\"\n                                }\n                              })\n                            : _vm._e()\n                        ],\n                        2\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-card-actions\",\n                    [\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { flat: \"\", color: \"accent\" },\n                          on: {\n                            click: function($event) {\n                              $event.stopPropagation()\n                              _vm.ready = true\n                            }\n                          }\n                        },\n                        [_vm._v(\"Join\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.username && _vm.color && _vm.ready\n            ? _c(\n                \"v-card\",\n                { staticClass: \"chat-card\" },\n                [\n                  _c(\"v-card-text\", [\n                    _c(\n                      \"ul\",\n                      {\n                        directives: [\n                          { name: \"chat-scroll\", rawName: \"v-chat-scroll\" }\n                        ],\n                        staticClass: \"messages\"\n                      },\n                      [\n                        !_vm.messages\n                          ? _c(\"p\", [\n                              _vm._v(\n                                \"There are no messages posted on this room.\"\n                              )\n                            ])\n                          : _vm._e(),\n                        _vm._l(_vm.messages, function(message) {\n                          return _c(\n                            \"li\",\n                            { key: message.id, attrs: { id: message.id } },\n                            [\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"name\",\n                                  style: { color: message.color }\n                                },\n                                [\n                                  _c(\"strong\", [\n                                    _vm._v(_vm._s(message.name) + \" \")\n                                  ])\n                                ]\n                              ),\n                              _c(\"span\", {\n                                domProps: { innerHTML: _vm._s(message.content) }\n                              }),\n                              _c(\"span\", { staticClass: \"time\" }, [\n                                _vm._v(_vm._s(message.timestamp))\n                              ]),\n                              _vm.username == \"diddy12310\"\n                                ? _c(\n                                    \"v-btn\",\n                                    {\n                                      staticClass: \"admin-btn\",\n                                      attrs: { flat: \"\", color: \"error\" },\n                                      on: {\n                                        click: function($event) {\n                                          _vm.deleteChat(message.id)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"Delete\")]\n                                  )\n                                : _vm._e(),\n                              _vm.username == \"diddy12310\"\n                                ? _c(\n                                    \"v-btn\",\n                                    {\n                                      staticClass: \"admin-btn\",\n                                      attrs: { flat: \"\", color: \"warning\" },\n                                      on: {\n                                        click: function($event) {\n                                          ;(_vm.editor = true),\n                                            (_vm.editing = message.id),\n                                            (_vm.editMessage = message.content)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"Edit\")]\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        })\n                      ],\n                      2\n                    )\n                  ]),\n                  _c(\"v-card-actions\", [\n                    !_vm.editor\n                      ? _c(\n                          \"form\",\n                          {\n                            staticClass: \"new-message\",\n                            on: {\n                              submit: function($event) {\n                                $event.preventDefault()\n                                return _vm.sendChat($event)\n                              }\n                            }\n                          },\n                          [\n                            _c(\n                              \"v-btn\",\n                              {\n                                staticStyle: {\n                                  float: \"right\",\n                                  display: \"inline\",\n                                  position: \"relative\",\n                                  top: \"16px\"\n                                },\n                                attrs: {\n                                  disabled: !_vm.flamechatEnable,\n                                  id: \"submit\",\n                                  type: \"submit\",\n                                  flat: \"\",\n                                  icon: \"\"\n                                }\n                              },\n                              [_c(\"v-icon\", [_vm._v(\"send\")])],\n                              1\n                            ),\n                            _c(\"v-text-field\", {\n                              staticClass: \"message-box\",\n                              attrs: {\n                                disabled: !_vm.flamechatEnable,\n                                autocomplete: \"off\",\n                                label: \"Message...\"\n                              },\n                              model: {\n                                value: _vm.newMessage,\n                                callback: function($$v) {\n                                  _vm.newMessage = $$v\n                                },\n                                expression: \"newMessage\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm.editor\n                      ? _c(\n                          \"form\",\n                          {\n                            staticClass: \"new-message\",\n                            on: {\n                              submit: function($event) {\n                                $event.preventDefault()\n                                return _vm.editChat($event)\n                              }\n                            }\n                          },\n                          [\n                            _c(\n                              \"v-btn\",\n                              {\n                                staticStyle: {\n                                  float: \"right\",\n                                  display: \"inline\",\n                                  position: \"relative\",\n                                  top: \"16px\"\n                                },\n                                attrs: {\n                                  id: \"submit\",\n                                  type: \"submit\",\n                                  flat: \"\",\n                                  icon: \"\"\n                                }\n                              },\n                              [_c(\"v-icon\", [_vm._v(\"edit\")])],\n                              1\n                            ),\n                            _c(\"v-text-field\", {\n                              staticClass: \"message-box\",\n                              attrs: {\n                                autocomplete: \"off\",\n                                label: \"Edit Message\"\n                              },\n                              model: {\n                                value: _vm.editMessage,\n                                callback: function($$v) {\n                                  _vm.editMessage = $$v\n                                },\n                                expression: \"editMessage\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e()\n                  ])\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { bottom: \"\", left: \"\", timeout: 2000 },\n          model: {\n            value: _vm.snackbar,\n            callback: function($$v) {\n              _vm.snackbar = $$v\n            },\n            expression: \"snackbar\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.feedback))]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}